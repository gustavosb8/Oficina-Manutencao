
#server.port= 8080

#thymeleaf
spring.thymeleaf.mode=HTML

spring.datasource.url=jdbc:mysql://us-cdbr-iron-east-05.cleardb.net
spring.datasource.username=b5d5378030c6dd
spring.datasource.password=046740c1
spring.jpa.hibernate.ddl-auto=update


#Permite que o Hibernate gere SQL otimizado para o MySQL
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# No MySQL se a conexão do banco de dados estiver inativa por 
# mais de 8 horas (28800 segundos), a conexão será automaticamente fechada 
# link: https://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_wait_timeout

# necessário em produção
#spring.datasource.testWhileIdle = true
#spring.datasource.timeBetweenEvictionRunsMillis = 60000
#spring.datasource.validationQuery = SELECT 1
# A cada minutos (60000 milis) será executado um teste de conexão 
# executando a consulta "SELECT 1" de validação. Desta forma, podemos manter viva a 
#conexão do banco de dados, e evitar chegar ao timeout do MySQL.

# exibe as conexões do banco de dados no log
spring.jpa.show-sql=true